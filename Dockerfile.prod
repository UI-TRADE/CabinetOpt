#################
# FRONT BUILDER #
#################

FROM node:latest as node_builder

WORKDIR /usr/src/app/

COPY ./package*.json ./
COPY ./webpack*.js ./
COPY ./src ./src

RUN npm install && npm run build

###########
# BUILDER #
###########

FROM python:3.9.12-alpine as env_builder

WORKDIR /usr/src/app

ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

RUN apk update \
    && apk add postgresql-dev g++ gcc python3-dev musl-dev libxslt-dev libffi-dev freetype-dev

RUN pip install --upgrade pip
COPY . .

COPY ./requirements.txt .
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/app/wheels -r requirements.txt

#########
# FINAL #
#########

FROM python:3.9.12-alpine

RUN mkdir -p /home/app
RUN addgroup -S app && adduser -S app -G app

ENV HOME=/home/app
ENV APP_HOME=/home/app/web
RUN mkdir $APP_HOME
RUN mkdir $APP_HOME/staticfiles
RUN mkdir $APP_HOME/mediafiles
WORKDIR $APP_HOME

RUN apk update \
    && apk add libpq postgresql-dev g++ gcc python3-dev \
    musl-dev libxslt-dev libffi-dev freetype-dev freetype-dev

COPY --from=env_builder /usr/src/app/wheels /wheels
COPY --from=env_builder /usr/src/app/requirements.txt .
RUN pip install --no-cache /wheels/*

COPY ./entrypoint.prod.sh .
RUN sed -i 's/\r$//g'  $APP_HOME/entrypoint.prod.sh
RUN chmod +x  $APP_HOME/entrypoint.prod.sh

COPY . $APP_HOME
COPY --from=node_builder /usr/src/app/static $APP_HOME/static

RUN chown -R app:app $APP_HOME

USER app

ENTRYPOINT ["/home/app/web/entrypoint.prod.sh"]
